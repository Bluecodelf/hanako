openapi: 3.0.0
info:
  title: Hanako Users API
  description: Hanako API to create, get and manage users.
  version: 0.0.1-SNAPSHOT

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: The identifier of the user. Generated by the server, unique and non-modifiable.
        username:
          type: string
          maxLength: 32
          example: 'john.doe'
          description: The usermame of the user. Unique and at most 32 characters.
        email:
          type: string
          format: email
          maxLength: 512
          example: 'john.doe@example.com'
          description: The email of the user. Unique and at most 512 characters.
        civility:
          $ref: '#/components/schemas/Civility'
        firstName:
          type: string
          example: 'John'
          description: The first name of the user. At most 512 characters.
        lastName:
          type: string
          example: 'Doe'
          description: The last name of the user. At most 512 characters.
        legalName:
          type: string
          example: 'John Doe'
          description: The legal name of the user. At most 1024 characters.
        password:
          type: string
          writeOnly: true
          example: 'sup3rS3cr3tP455w0rd'
          description: The password of the user. Plaintext and not readable.
        status:
          $ref: '#/components/schemas/Status'
    Civility:
      type: string
      enum:
        - MR
        - MS
        - MO
        - CI
        - CP
        - CO
        - GV
        - GL
      description: >
        The civility of the user, being one of the following:
         * `MR` - A male individual.
         * `MS` - A female individual.
         * `MO` - An individual identifying as neither male nor female.
         * `CI` - A one-person commercial entity (e.g. a freelance).
         * `CP` - A corporation or a business. In legal terms, this corresponds to a commercial partnership (LP and derivatives), a limited liability company (LLC and derivatives) or a corporation (Corp., Inc. and derivatives).
         * `CO` - A non-profit organization, foundation or association.
         * `GV` - A governmental entity, belonging to a recognized or unrecognized state.
         * `GL` - An official or non-official entity with a legal purpose, such as a tribunal or auditor.
      example: 'MR'
    Status:
      type: string
      enum:
        - STD
        - ADM
        - DSB
      description: >
        The status of the user, being one of the following:
         * `STD` - A standard user.
         * `ADM` - An administrator. This status means that the user will be able to bypass any user rights or groups system that might be used throughout the Tiwind Software ecosystem.
         * `DSB` - A disabled user. This status means that the user cannot log in or do any operational action.
      example: 'STD'

paths:
  /users:
    get:
      summary: Return a list of users.
      description: Gets a list of users from Hanako, supporting pagination.
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            default: 20
            minimum: 1
            maximum: 100
          required: false
          description: The maximum number of returned users.
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
            minimum: 0
          required: false
          description: The offset of the users to return.
      responses:
        '200':
          description: Successfully retrieved a list of users.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '400':
          description: The received user request is invalid.
          content:
            application/json:
              schema:
                $ref: './CORE.yaml#/components/schemas/CoreError'
    post:
      summary: Create a new user.
      description: Creates a new user in the Hanako backend.
      requestBody:
        description: The payload used to create users.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Successfully created the user.
          content:
            application/json:
              schema:
                $ref: '#components/schemas/User'
        '400':
          description: The received user request is invalid.
          content:
            application/json:
              schema:
                $ref: './CORE.yaml#/components/schemas/CoreError'
        '403':
          description: The received user request is invalid.
          content:
            application/json:
              schema:
                $ref: './CORE.yaml#/components/schemas/CoreError'
        '409':
          description: One of the given attributes is unique and already exists.
          content:
            application/json:
              schema:
                $ref: './CORE.yaml#/components/schemas/CoreError'
